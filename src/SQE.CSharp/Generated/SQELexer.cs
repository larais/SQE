//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SQE.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SQE {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class SQELexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, AND=3, OR=4, OPERATOR=5, NUMBER=6, PROPERTY=7, ESCAPEDSTRING=8, 
		WHITESPACE=9, NEWLINE=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "AND", "OR", "OPERATOR", "A", "D", "N", "O", "R", "NUMBER", 
		"PROPERTY", "LETTER", "DIGIT", "LETTERNUM", "EQUALS", "NOTEQUALS", "GREATER", 
		"LESS", "ESCAPEDSTRING", "WHITESPACE", "NEWLINE"
	};


	public SQELexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SQELexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", null, null, null, null, null, null, "' '"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "AND", "OR", "OPERATOR", "NUMBER", "PROPERTY", "ESCAPEDSTRING", 
		"WHITESPACE", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SQE.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SQELexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', '\x87', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x5', '\x6', '?', '\n', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x6', '\f', 'L', '\n', '\f', '\r', '\f', '\xE', '\f', 'M', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\a', '\r', 'S', '\n', '\r', '\f', '\r', 
		'\xE', '\r', 'V', '\v', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x15', '\a', '\x15', 'k', '\n', '\x15', '\f', '\x15', '\xE', '\x15', 
		'n', '\v', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\a', '\x15', 'u', '\n', '\x15', '\f', '\x15', 
		'\xE', '\x15', 'x', '\v', '\x15', '\x3', '\x15', '\x5', '\x15', '{', '\n', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x5', '\x17', '\x82', '\n', '\x17', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x17', '\x4', 'l', 'v', '\x2', '\x18', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\x2', '\xF', 
		'\x2', '\x11', '\x2', '\x13', '\x2', '\x15', '\x2', '\x17', '\b', '\x19', 
		'\t', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', '\x2', '#', '\x2', 
		'%', '\x2', '\'', '\x2', ')', '\n', '+', '\v', '-', '\f', '\x3', '\x2', 
		'\n', '\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', '\x46', 
		'\x46', '\x66', '\x66', '\x4', '\x2', 'P', 'P', 'p', 'p', '\x4', '\x2', 
		'Q', 'Q', 'q', 'q', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', '\x43', 
		'\\', '\x63', '|', '\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', 
		'\x43', '\\', '\x63', '|', '\x2', '\x86', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '/', '\x3', '\x2', '\x2', '\x2', '\x5', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\a', '\x33', '\x3', '\x2', '\x2', '\x2', '\t', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\v', '>', '\x3', '\x2', '\x2', '\x2', '\r', 
		'@', '\x3', '\x2', '\x2', '\x2', '\xF', '\x42', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x44', '\x3', '\x2', '\x2', '\x2', '\x13', '\x46', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'H', '\x3', '\x2', '\x2', '\x2', '\x17', 'K', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'O', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'W', '\x3', '\x2', '\x2', '\x2', '\x1D', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', '[', '\x3', '\x2', '\x2', '\x2', '!', ']', '\x3', '\x2', '\x2', 
		'\x2', '#', '_', '\x3', '\x2', '\x2', '\x2', '%', '\x62', '\x3', '\x2', 
		'\x2', '\x2', '\'', '\x64', '\x3', '\x2', '\x2', '\x2', ')', 'z', '\x3', 
		'\x2', '\x2', '\x2', '+', '|', '\x3', '\x2', '\x2', '\x2', '-', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '/', '\x30', '\a', '*', '\x2', '\x2', '\x30', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\a', '+', '\x2', '\x2', 
		'\x32', '\x6', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\x5', '\r', 
		'\a', '\x2', '\x34', '\x35', '\x5', '\x11', '\t', '\x2', '\x35', '\x36', 
		'\x5', '\xF', '\b', '\x2', '\x36', '\b', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x38', '\x5', '\x13', '\n', '\x2', '\x38', '\x39', '\x5', '\x15', '\v', 
		'\x2', '\x39', '\n', '\x3', '\x2', '\x2', '\x2', ':', '?', '\x5', '!', 
		'\x11', '\x2', ';', '?', '\x5', '#', '\x12', '\x2', '<', '?', '\x5', '%', 
		'\x13', '\x2', '=', '?', '\x5', '\'', '\x14', '\x2', '>', ':', '\x3', 
		'\x2', '\x2', '\x2', '>', ';', '\x3', '\x2', '\x2', '\x2', '>', '<', '\x3', 
		'\x2', '\x2', '\x2', '>', '=', '\x3', '\x2', '\x2', '\x2', '?', '\f', 
		'\x3', '\x2', '\x2', '\x2', '@', '\x41', '\t', '\x2', '\x2', '\x2', '\x41', 
		'\xE', '\x3', '\x2', '\x2', '\x2', '\x42', '\x43', '\t', '\x3', '\x2', 
		'\x2', '\x43', '\x10', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\t', 
		'\x4', '\x2', '\x2', '\x45', '\x12', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'G', '\t', '\x5', '\x2', '\x2', 'G', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'H', 'I', '\t', '\x6', '\x2', '\x2', 'I', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'L', '\x5', '\x1D', '\xF', '\x2', 'K', 'J', '\x3', '\x2', 
		'\x2', '\x2', 'L', 'M', '\x3', '\x2', '\x2', '\x2', 'M', 'K', '\x3', '\x2', 
		'\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', '\x18', '\x3', 
		'\x2', '\x2', '\x2', 'O', 'T', '\x5', '\x1B', '\xE', '\x2', 'P', 'S', 
		'\x5', '\x1B', '\xE', '\x2', 'Q', 'S', '\x5', '\x1D', '\xF', '\x2', 'R', 
		'P', '\x3', '\x2', '\x2', '\x2', 'R', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'S', 'V', '\x3', '\x2', '\x2', '\x2', 'T', 'R', '\x3', '\x2', '\x2', '\x2', 
		'T', 'U', '\x3', '\x2', '\x2', '\x2', 'U', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'T', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\t', '\a', '\x2', 
		'\x2', 'X', '\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\t', '\b', 
		'\x2', '\x2', 'Z', '\x1E', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\t', 
		'\t', '\x2', '\x2', '\\', ' ', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', 
		'?', '\x2', '\x2', '^', '\"', '\x3', '\x2', '\x2', '\x2', '_', '`', '\a', 
		'#', '\x2', '\x2', '`', '\x61', '\a', '?', '\x2', '\x2', '\x61', '$', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\a', '@', '\x2', '\x2', '\x63', 
		'&', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', '>', '\x2', '\x2', 
		'\x65', '(', '\x3', '\x2', '\x2', '\x2', '\x66', 'l', '\a', '$', '\x2', 
		'\x2', 'g', 'h', '\a', '^', '\x2', '\x2', 'h', 'k', '\a', '$', '\x2', 
		'\x2', 'i', 'k', '\v', '\x2', '\x2', '\x2', 'j', 'g', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'n', '\x3', '\x2', '\x2', 
		'\x2', 'l', 'm', '\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'o', '\x3', '\x2', '\x2', '\x2', 'n', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'o', '{', '\a', '$', '\x2', '\x2', 'p', 'v', '\a', ')', '\x2', 
		'\x2', 'q', 'r', '\a', '^', '\x2', '\x2', 'r', 'u', '\a', ')', '\x2', 
		'\x2', 's', 'u', '\v', '\x2', '\x2', '\x2', 't', 'q', '\x3', '\x2', '\x2', 
		'\x2', 't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\x3', '\x2', '\x2', 
		'\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'v', 't', '\x3', '\x2', '\x2', 
		'\x2', 'w', 'y', '\x3', '\x2', '\x2', '\x2', 'x', 'v', '\x3', '\x2', '\x2', 
		'\x2', 'y', '{', '\a', ')', '\x2', '\x2', 'z', '\x66', '\x3', '\x2', '\x2', 
		'\x2', 'z', 'p', '\x3', '\x2', '\x2', '\x2', '{', '*', '\x3', '\x2', '\x2', 
		'\x2', '|', '}', '\a', '\"', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', 
		'\x2', '~', '\x7F', '\b', '\x16', '\x2', '\x2', '\x7F', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '\x82', '\a', '\xF', '\x2', '\x2', '\x81', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', 
		'\x82', '\x83', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\a', '\f', 
		'\x2', '\x2', '\x84', '\x85', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', 
		'\b', '\x17', '\x2', '\x2', '\x86', '.', '\x3', '\x2', '\x2', '\x2', '\r', 
		'\x2', '>', 'M', 'R', 'T', 'j', 'l', 't', 'v', 'z', '\x81', '\x3', '\b', 
		'\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SQE
